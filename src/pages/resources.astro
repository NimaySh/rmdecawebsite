---
import Layout from '~/layouts/PageLayout.astro';

const metadata = {
  title: 'Resources',
};

const filterOptions = ['Sample Roleplay', 'Practice Test', 'Quizlet', 'Study Guide', 'Other'];
const tabOptions = ['Business Admin', 'Entrepreneurship', 'Finance', 'Hospitality & Tourism', 'Marketing', 'Personal Financial Literacy'];
const tabColors = ['text-business-management', 'text-entrepreneurship', 'text-finance', 'text-hospitality-tourism', 'text-marketing', 'text-personal-financial-literacy'];
---

<Layout metadata={metadata}>
  <main class="min-h-screen bg-gray-50">
    <section class="text-center py-12 md:py-16 bg-blue-50">
      <div class="container mx-auto px-4">
        <div class="inline-block relative">
          <h1 class="text-4xl md:text-5xl font-bold bg-gradient-title from-blue-800 to-blue-400 bg-clip-text text-transparent mb-1">
            Resources
          </h1>
        </div>
        <h2 class="text-lg md:text-xl text-gray-600 max-w-md md:max-w-2xl mx-auto mt-4 leading-relaxed">
          Find sample roleplays, practice tests, quizlets, and more!
        </h2>
      </div>
    </section>

    <!-- Resource Filter System -->
    <section class="container mx-auto px-4 py-8">
      <div class="flex flex-col md:flex-row gap-8">
        <!-- Sidebar Filters -->
        <aside class="md:w-1/4 space-y-6">
          <!-- View Toggle -->
          <div class="bg-white p-4 rounded-lg shadow-sm">
            <div class="inline-flex rounded-md shadow-sm">
              <button id="listViewBtn" class="px-4 py-2 text-sm font-medium rounded-l-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors">
                List
              </button>
              <button id="blockViewBtn" class="px-4 py-2 text-sm font-medium rounded-r-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors">
                Block
              </button>
            </div>
          </div>

          <!-- Filter Options -->
          <div class="bg-white p-6 rounded-lg shadow-sm">
            <h3 class="text-lg font-semibold mb-4">Resource Type</h3>
            <div class="space-y-3">
              {filterOptions.map(filter => (
                <label class="flex items-center gap-3 cursor-pointer group">
                  <input
                    type="checkbox"
                    id={filter}
                    name="filter"
                    value={filter}
                    class="form-checkbox h-5 w-5 text-blue-600 rounded border-gray-300 focus:ring-blue-500 transition-colors"
                  />
                  <span class="text-gray-700 group-hover:text-gray-900">{filter}</span>
                </label>
              ))}
            </div>
          </div>
        </aside>

        <!-- Main Content -->
        <div class="md:w-3/4">
          <!-- Tab Navigation -->
          <nav class="bg-white p-1 rounded-lg shadow-sm mb-6 overflow-x-auto hide-scrollbar">
            <div class="flex space-x-1 no-wrap" id="tabContainer">
              {tabOptions.map((tab, index) => (
                <button
                  class={`px-4 py-2 text-sm font-medium rounded-md transition-all duration-300 tab-button 
                    hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500
                    ${tabColors[index]} ${tab === 'Business Admin' ? 'bg-gray-50 shadow-sm' : ''}`}
                  data-tab={tab}
                  data-color={tabColors[index]}
                >
                  {tab}
                </button>
              ))}
            </div>
          </nav>

          <!-- Resource List -->
          <div id="resourceList" class="min-h-[400px] transition-all duration-300">
            <div class="text-center text-gray-500 py-8">Loading resources...</div>
          </div>
        </div>
      </div>
    </section>
  </main>
</Layout>

<style>
  .hide-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  
  .hide-scrollbar::-webkit-scrollbar {
    display: none;
  }
  
  .no-wrap {
    -webkit-overflow-scrolling: touch;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
  }
  
  .tab-button {
    scroll-snap-align: start;
    white-space: nowrap;
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  #resourceList {
    animation: fadeIn 0.3s ease-in-out;
  }
</style>

<script>
  function initializeResourcePage() {
    let filteredResources = [];
    let selectedFilters = [];
    let selectedTab = 'Business Admin';
    let isBlockView = false;
    let resources = [];

    const resourceList = document.getElementById('resourceList');
    const tabContainer = document.getElementById('tabContainer');
    const listViewBtn = document.getElementById('listViewBtn');
    const blockViewBtn = document.getElementById('blockViewBtn');

    function getYearFromName(name) {
      const match = name.match(/\b(20\d{2})\b(?:\s*\(\d+\))?/);
      return match ? match[0] : '';
    }

    function getNameWithoutYear(name) {
      return name.replace(/\s*\b(20\d{2})\b(?:\s*\(\d+\))?/, '');
    }

    function updateResourceList() {
      if (!resourceList) return;
      
      resourceList.innerHTML = '';
      
      if (isBlockView) {
        resourceList.className = 'grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6';
      } else {
        resourceList.className = 'space-y-3';
      }

      if (filteredResources.length === 0) {
        const noResults = document.createElement('div');
        noResults.className = 'text-center text-gray-500 py-8 bg-white rounded-lg shadow-sm';
        noResults.textContent = 'No resources found for the selected filters';
        resourceList.appendChild(noResults);
        return;
      }

      filteredResources.forEach(resource => {
        const div = document.createElement('div');
        const year = getYearFromName(resource.name);
        const nameWithoutYear = getNameWithoutYear(resource.name);
        
        if (isBlockView) {
          div.className = 'group bg-white rounded-lg shadow-sm hover:shadow-md transition-all duration-300 relative overflow-hidden';
          div.innerHTML = `
            <div class="absolute top-0 left-0 w-1.5 h-full ${getTabColor(resource.cluster)}"></div>
            <div class="p-6">
              <div class="w-12 h-12 mb-4 flex items-center justify-center bg-gray-100 rounded-full group-hover:bg-gray-200 transition-colors">
                <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
              </div>
              <a href="${resource.link}" target="_blank" rel="noopener noreferrer" class="block group-hover:transform group-hover:-translate-y-0.5 transition-transform">
                <h3 class="text-gray-900 group-hover:text-blue-600 font-medium transition-colors">
                  ${nameWithoutYear}
                </h3>
                <p class="text-sm text-gray-500 mt-2">
                  ${year}
                </p>
              </a>
            </div>
          `;
        } else {
          div.className = 'group bg-white hover:bg-gray-50 rounded-lg shadow-sm transition-all duration-300 relative overflow-hidden';
          div.innerHTML = `
            <div class="absolute top-0 left-0 w-1.5 h-full ${getTabColor(resource.cluster)}"></div>
            <a href="${resource.link}" target="_blank" rel="noopener noreferrer" 
               class="block px-6 py-4 ml-1.5">
              <div class="flex items-center justify-between">
                <span class="text-gray-900 group-hover:text-blue-600 transition-colors">${nameWithoutYear}</span>
                <span class="text-sm text-gray-500">${year}</span>
              </div>
            </a>
          `;
        }
        resourceList.appendChild(div);
      });
    }

    function getTabColor(cluster) {
      const tabOptions = ['Business Admin', 'Entrepreneurship', 'Finance', 'Hospitality & Tourism', 'Marketing', 'Personal Financial Literacy'];
      const tabColors = ['bg-business-management', 'bg-entrepreneurship', 'bg-finance', 'bg-hospitality-tourism', 'bg-marketing', 'bg-personal-financial-literacy'];
      const index = tabOptions.indexOf(cluster);
      return index !== -1 ? tabColors[index] : 'bg-gray-500';
    }

    function applyFilters() {
      filteredResources = resources.filter(resource => {
        const typeMatch = selectedFilters.length === 0 || selectedFilters.includes(resource.type);
        const clusterMatch = resource.cluster === selectedTab;
        return typeMatch && clusterMatch;
      });
      updateResourceList();
    }

    function initializeEventListeners() {
      document.querySelectorAll('input[name="filter"]').forEach(checkbox => {
        checkbox.addEventListener('change', (e) => {
          if (e.target.checked) {
            selectedFilters.push(e.target.value);
          } else {
            selectedFilters = selectedFilters.filter(f => f !== e.target.value);
          }
          applyFilters();
        });
      });

      tabContainer?.addEventListener('click', (e) => {
        const button = e.target.closest('.tab-button');
        if (button) {
          selectedTab = button.dataset.tab;
          document.querySelectorAll('.tab-button').forEach(btn => {
            btn.classList.remove('bg-gray-50', 'shadow-sm');
          });
          button.classList.add('bg-gray-50', 'shadow-sm');
          applyFilters();
        }
      });

      listViewBtn?.addEventListener('click', () => {
        isBlockView = false;
        updateViewButtons();
        updateResourceList();
      });

      blockViewBtn?.addEventListener('click', () => {
        isBlockView = true;
        updateViewButtons();
        updateResourceList();
      });
    }

    function updateViewButtons() {
      if (isBlockView) {
        blockViewBtn?.classList.add('bg-blue-600', 'text-white');
        blockViewBtn?.classList.remove('bg-gray-100', 'text-gray-700');
        listViewBtn?.classList.remove('bg-blue-600', 'text-white');
        listViewBtn?.classList.add('bg-gray-100', 'text-gray-700');
      } else {
        listViewBtn?.classList.add('bg-blue-600', 'text-white');
        listViewBtn?.classList.remove('bg-gray-100', 'text-gray-700');
        blockViewBtn?.classList.remove('bg-blue-600', 'text-white');
        blockViewBtn?.classList.add('bg-gray-100', 'text-gray-700');
      }
    }

    updateViewButtons();

    fetch('/resources.json')
      .then(response => {
        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
        return response.json();
      })
      .then(data => {
        resources = Array.isArray(data.Sheet1) ? data.Sheet1 : [];
        filteredResources = resources.filter(resource => resource.cluster === 'Business Admin');
        initializeEventListeners();
        updateResourceList();
      })
      .catch(error => {
        console.error('Error fetching resources:', error);
        if (resourceList) {
          resourceList.innerHTML = `
            <div class="text-center py-8 bg-white rounded-lg shadow-sm">
              <p class="text-red-500">Error loading resources. Please try again later.</p>
              <button onclick="location.reload()" class="mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                Retry
              </button>
            </div>
          `;
        }
      });
  }

  // Initialize on DOM ready
  document.addEventListener('DOMContentLoaded', initializeResourcePage);

  // Handle back/forward cache
  window.addEventListener('pageshow', (event) => {
    if (event.persisted) initializeResourcePage();
  });

  // Handle Astro view transitions
  document.addEventListener('astro:page-load', initializeResourcePage);
</script>
