---
import HeroText from '~/components/widgets/HeroText.astro';
import Layout from '~/layouts/PageLayout.astro';
import { Icon } from 'astro-icon/components';

const metadata = {
  title: 'DECA 101',
};

const competitionTypes = [
  { title: "Written", color: "bg-blue-200", content: "Written competition details..." },
  { title: "Role Play", color: "bg-green-200", content: "Role play competition details..." },
  { title: "Presentation", color: "bg-yellow-200", content: "Presentation competition details..." },
  { title: "Virtual Business Challenge", color: "bg-purple-200", content: "Virtual Business Challenge details..." }
];

const faqRows = [
  { question: "Business Management and Administration", answer: "DECA is...", color: "bg-business-management" }, 
  { question: "Entrepreneurship", answer: "DECA membership is...", color: "bg-entrepreneurship" },
  { question: "Finance", answer: "DECA offers...", color: "bg-finance" }, 
  { question: "Hospitality and Tourism", answer: "To prepare for DECA competitions...", color: "bg-hospitality-tourism" }, 
  { question: "Marketing", answer: "DECA supports various career paths including...", color: "bg-marketing" }, 
  { question: "Personal Financial Literacy", answer: "DECA provides resources for personal financial literacy...", color: "bg-personal-financial-literacy" }
];

const tabContent = [
  { 
    id: "regional", 
    title: "Regional", 
    content: [
      "Hosted @ Montgomery Blair High School on Jan 4th",
      "You're automatically qualified for states so there are no stakes during this competition! (Try your best)",
      "1st Years are strongly recommended to go to regionals!",
      "A chance for you to get used to DECA (Roleplay or Written)",
      "Your best chance to practice a strategy!"
    ]
  },
  { 
    id: "state", 
    title: "State", 
    content: [
      "Hosted at College Park Marriot in Febuary (More Details Coming Soon)",
      "In order to qualify you must win Top 3 in your event (This will make sense just keep reading)",
      "Always wear a suit or formal clothing and BRING A PEN!!",
    ]
  },
  { 
    id: "international", 
    title: "International", 
    content: [
      "Hosted in Orlando Florida ðŸ˜Ž from April 26-29",
      "A international competition with thousands of students from across the globe!",
      "Practice your sales skills by trading pins for each state (You'll understand this when you get there)!",
      "A chance for you to win RM the DECA Glass!"
    ]
  }
];
---

<Layout metadata={metadata}>
  <HeroText
    tagline="DECA 101"
    title="What is DECA?"
    subtitle="DECA prepares emerging leaders and entrepreneurs for careers in marketing, finance, hospitality and management. You'll learn how to speak business, act business, and do business. Keep reading to learn what DECA really is..."
  />
  <div class="container mx-auto px-4">
    <div class="mb-8">
      <div class="tabs flex justify-center border-b relative">
        {tabContent.map((tab, index) => (
          <button class={`tab-btn px-4 py-2 ${index === 0 ? 'active' : ''}`} data-tab={tab.id}>
            {tab.title}
          </button>
        ))}
        <div class="tab-indicator"></div>
      </div>
      <div class="tab-content-container relative">
        {tabContent.map((tab, index) => (
          <div id={tab.id} class={`tab-content p-4 ${index === 0 ? 'active' : ''}`}>
            <div class="flex flex-col md:flex-row">
              <div class="md:w-1/2 pr-4">
                <h3 class="text-xl font-bold mb-4">{tab.title} Competition</h3>
                <ol class="list-decimal pl-5">
                  {tab.content.map((item, i) => (
                    <li key={i} class="mb-2">{item}</li>
                  ))}
                </ol>
              </div>
              <div class="md:w-1/2 mt-4 md:mt-0">
                <div class="bg-gray-200 h-64 flex items-center justify-center">
                  <p class="text-gray-500">Image Placeholder</p>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>

    <h2 class="text-2xl font-bold mb-4 text-center">Types of Competition</h2>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
      {competitionTypes.map((type) => (
        <div class={`p-4 ${type.color} rounded-lg shadow`}>
          <h3 class="text-xl font-bold mb-2">{type.title}</h3>
          <p>{type.content}</p>
        </div>
      ))}
    </div>

    <div class="faq-section">
      {faqRows.map((row, index) => (
        <div class="mb-2 faq-item rounded-lg overflow-hidden">
          <button class={`faq-question w-full text-left p-4 ${row.color} hover:bg-opacity-80 flex justify-between items-center font-bold`}>
            {row.question}
            <Icon name="tabler:chevron-down" class="w-5 h-5 transform transition-transform duration-300" />
          </button>
          <div class="faq-answer bg-white">
            <div class="faq-answer-content p-4">{row.answer}</div>
          </div>
        </div>
      ))}
    </div>
  </div>
</Layout>

<style>
  .tabs {
    position: relative;
  }
  .tab-btn {
    position: relative;
    z-index: 1;
    transition: color 0.3s;
  }
  .tab-btn.active {
    color: #4a90e2;
  }
  .tab-indicator {
    position: absolute;
    bottom: 0;
    height: 2px;
    background-color: #4a90e2;
    transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
  }
  .tab-content-container {
    position: relative;
    overflow: hidden;
  }
  .tab-content {
    background-color: #f3f4f6;
    transition: opacity 0.3s, transform 0.3s;
    opacity: 0;
    transform: translateX(20px);
    display: none;
  }
  .tab-content.active {
    opacity: 1;
    transform: translateX(0);
    display: block;
  }
  .faq-answer {
    max-height: 0;
    transition: max-height 0.3s ease-out, opacity 0.3s ease-out;
    opacity: 0;
    overflow: hidden;
  }
  .faq-question.active + .faq-answer {
    max-height: 500px; /* Adjust this value based on your content */
    opacity: 1;
    transition: max-height 0.5s ease-in, opacity 0.3s ease-in;
  }
  .faq-answer-content {
    transform: translateY(-10px);
    transition: transform 0.3s ease-out;
  }
  .faq-question.active + .faq-answer .faq-answer-content {
    transform: translateY(0);
    transition: transform 0.3s ease-in;
  }
  .faq-question .tabler\:chevron-down {
    transition: transform 0.3s ease-in-out;
  }
  .faq-question.active .tabler\:chevron-down {
    transform: rotate(180deg);
  }
</style>

<script>
  function initDynamicFeatures() {
    // Tab functionality
    const tabBtns = document.querySelectorAll('.tab-btn');
    const tabContents = document.querySelectorAll('.tab-content');
    const tabIndicator = document.querySelector('.tab-indicator');

    function setIndicatorPosition(btn) {
      if (tabIndicator) {
        tabIndicator.style.width = `${btn.offsetWidth}px`;
        tabIndicator.style.left = `${btn.offsetLeft}px`;
      }
    }

    tabBtns.forEach((btn, index) => {
      if (index === 0) setIndicatorPosition(btn);
      
      btn.addEventListener('click', () => {
        const tabId = btn.getAttribute('data-tab');
        
        tabBtns.forEach(b => b.classList.remove('active'));
        tabContents.forEach(content => content.classList.remove('active'));
        
        btn.classList.add('active');
        const activeContent = document.getElementById(tabId);
        if (activeContent) activeContent.classList.add('active');
        
        setIndicatorPosition(btn);
      });
    });

    // FAQ functionality
    const faqQuestions = document.querySelectorAll('.faq-question');

    faqQuestions.forEach(question => {
      question.addEventListener('click', () => {
        const answer = question.nextElementSibling;
        const icon = question.querySelector('.tabler\\:chevron-down');

        if (question.classList.contains('active')) {
          question.classList.remove('active');
          answer.style.maxHeight = '0px';
          answer.style.opacity = '0';
          icon.style.transform = 'rotate(0deg)';
        } else {
          // Close any open FAQ items
          faqQuestions.forEach(q => {
            if (q !== question && q.classList.contains('active')) {
              q.classList.remove('active');
              q.nextElementSibling.style.maxHeight = '0px';
              q.nextElementSibling.style.opacity = '0';
              q.querySelector('.tabler\\:chevron-down').style.transform = 'rotate(0deg)';
            }
          });

          question.classList.add('active');
          answer.style.maxHeight = answer.scrollHeight + 'px';
          answer.style.opacity = '1';
          icon.style.transform = 'rotate(180deg)';
        }
      });
    });
  }

  // Initialize dynamic features on page load
  document.addEventListener('DOMContentLoaded', initDynamicFeatures);

  // Re-initialize dynamic features when Astro swaps the page content
  document.addEventListener('astro:page-load', initDynamicFeatures);
</script>